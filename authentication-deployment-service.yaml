apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentication
  template:
    metadata:
      labels:
        app: authentication
    spec:
      nodeSelector:
        node-restriction.kubernetes.io/authentication: "true"
      containers:
      - name: authentication
        image: miloskec/authentication:latest
        imagePullPolicy: Always
        env:
        - name: DB_HOST
          value: "mysql-authent-service"
        - name: DB_PORT
          value: "3306"
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_DATABASE
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_PASSWORD
        - name: JWT_TTL
          value: "600"
        - name: MAIL_HOST
          valueFrom:
            secretKeyRef:
              name: mail-secret
              key: host
        - name: MAIL_PORT
          valueFrom:
            secretKeyRef:
              name: mail-secret
              key: port
        - name: MAIL_MAILER
          valueFrom:
            secretKeyRef:
              name: mail-secret
              key: mailer
        - name: MAIL_USERNAME
          valueFrom:
            secretKeyRef:
              name: mail-secret
              key: username
        - name: MAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mail-secret
              key: password
        - name: MAIL_ENCRYPTION
          valueFrom:
            secretKeyRef:
              name: mail-secret
              key: encryption
        ports:
        - containerPort: 80
        volumeMounts:
        - name: app-authent-storage-logs
          mountPath: /var/www/html/storage/logs
        - name: app-authent-logs
          mountPath: /var/www/html/logs
      volumes:
      - name: app-authent-storage-logs
        persistentVolumeClaim:
          claimName: app-apslc
      - name: app-authent-logs
        persistentVolumeClaim:
          claimName: app-aplc
---
apiVersion: v1
kind: Service
metadata:
  name: authentication-service
spec:
  type: ClusterIP
  selector:
    app: authentication
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-authent-storage-logs
  labels:
    type: app-authent-storage-logs
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Delete # Change to Retain
  storageClassName: standard
  hostPath:
    path: /mnt/salogs
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-apslc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
  selector:
    matchLabels:
      type: app-authent-storage-logs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-authent-logs
  labels:
    type: app-authent-logs
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Delete # Change to Retain
  storageClassName: standard
  hostPath:
    path: /mnt/alogs
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-aplc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
  selector:
    matchLabels:
      type: app-authent-logs
